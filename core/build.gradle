plugins {
    id 'java'
    id 'java-library'
}

dependencies {
    api project(':api')
}

if (JavaVersion.current() > JavaVersion.VERSION_1_8) {
    sourceSets {
        def srcSet = sourceSets
        register('jdk9') { jdk9 ->
            jdk9.compileClasspath += srcSet.main.compileClasspath
        }
    }
    compileJdk9Java {
        sourceCompatibility = JavaVersion.VERSION_1_9
        targetCompatibility = JavaVersion.VERSION_1_9
    }
    jar.from(compileJdk9Java)
}

task runTest(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    dependsOn(':testunit:compileJava')

    main = 'iog.B'

//    jvmArgs(
//            "-javaagent:" + project(':testunit-launcher').buildDir + "/libs/testunit-launcher-" + project(':testunit-launcher').version + ".jar=iog.B"
//    )
    jvmArgs('-agentpath:E:\\IDEAProjects\\JvmHookFramework\\native\\cmake-build-release\\libnative.dll')
    args(project(':testunit').buildDir.toString() + "/classes/java/main")
}
